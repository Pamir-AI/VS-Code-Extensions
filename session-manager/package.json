{
  "name": "happy-session-manager",
  "displayName": "Happy Session Manager",
  "description": "Manage Happy Claude sessions from VS Code",
  "version": "1.0.1",
  "publisher": "pamir-ai",
  "icon": "icon.png",
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/Pamir-AI/VS-Code-Extensions"
  },
  "bugs": {
    "url": "https://github.com/Pamir-AI/VS-Code-Extensions/issues"
  },
  "homepage": "https://github.com/Pamir-AI/VS-Code-Extensions#readme",
  "keywords": [
    "claude",
    "sessions",
    "happy",
    "ai",
    "assistant",
    "codex",
    "session-manager"
  ],
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Happy Sessions",
      "properties": {
        "happySessions.serverUrl": {
          "type": "string",
          "default": "http://127.0.0.1:3005",
          "description": "Happy server URL for API requests"
        },
        "happySessions.authToken": {
          "type": "string",
          "default": "",
          "description": "Happy authentication token (JWT). Leave empty for localhost development."
        },
        "happySessions.cliPath": {
          "type": "string",
          "default": "",
          "description": "Path to happy CLI binary (auto-detected if empty)"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "happy-sessions-container",
          "title": "Session Manager",
          "icon": "$(layers)"
        }
      ]
    },
    "views": {
      "happy-sessions-container": [
        {
          "id": "happySessions",
          "name": "Active Sessions",
          "icon": "$(layers)"
        }
      ]
    },
    "commands": [
      {
        "command": "happySessions.refresh",
        "title": "Refresh Sessions",
        "icon": "$(refresh)"
      },
      {
        "command": "happySessions.resumeSession",
        "title": "Resume Session",
        "icon": "$(play)"
      },
      {
        "command": "happySessions.copySessionId",
        "title": "Copy Session ID"
      },
      {
        "command": "happySessions.openDirectory",
        "title": "Open in Explorer"
      },
      {
        "command": "happySessions.previewTranscript",
        "title": "Preview Transcript"
      },
      {
        "command": "happySessions.killSession",
        "title": "Kill Session"
      },
      {
        "command": "happySessions.openSettings",
        "title": "Open Happy Sessions Settings"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "happySessions.refresh",
          "when": "view == happySessions",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "happySessions.resumeSession",
          "when": "view == happySessions && viewItem == session",
          "group": "inline"
        },
        {
          "command": "happySessions.previewTranscript",
          "when": "view == happySessions && (viewItem == session || viewItem == codexSession)",
          "group": "1_actions"
        },
        {
          "command": "happySessions.openDirectory",
          "when": "view == happySessions && (viewItem == session || viewItem == codexSession)",
          "group": "1_actions"
        },
        {
          "command": "happySessions.copySessionId",
          "when": "view == happySessions && (viewItem == session || viewItem == codexSession)",
          "group": "2_clipboard"
        },
        {
          "command": "happySessions.killSession",
          "when": "view == happySessions && (viewItem == session || viewItem == codexSession)",
          "group": "3_danger"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^8.42.0",
    "@typescript-eslint/parser": "^8.42.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.9",
    "eslint": "^9.34.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "axios": "^1.12.2",
    "zod": "^4.1.11"
  },
  "files": [
    "dist/**",
    "icon.png",
    "README.md",
    "CHANGELOG.md",
    "LICENSE"
  ]
}
